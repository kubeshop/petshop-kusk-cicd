openapi: 3.0.3
info:
  title: Simple API to validate Kusk Extensions
  description: Sample API which can be deployed to Kubernetes using Kusk extension
  version: 0.0.1
  contact:
    name: Frank Kilcommins
    email: frank.kilcommins@smartbear.com
  license:
    name: Apache
    url: http://localhost/licenses
paths:
  "/pet/{petId}":
    get:
      tags:
      - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
      - name: petId
        in: path
        description: ID of pet to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                "$ref": "#/components/schemas/Pet"
            application/json:
              schema:
                "$ref": "#/components/schemas/Pet"
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        default:
          description: Get Pet response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
  "/pet/findByStatus":
    get:
      tags:
      - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
      - name: status
        in: query
        description: Status values that need to be considered for filter
        required: false
        explode: true
        schema:
          type: string
          default: available
          enum:
          - available
          - pending
          - sold
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Pet"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Pet"
        '400':
          description: Invalid status value
        default:
          description: Get Pets response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
components:
  schemas:
    Pet:
      type: object
      properties:
        name:
          type: string
          description: the name of the pet
          example: Rover
        color:
          type: string
          description: the color of the pet
          example: yellow
        age:
          type: integer
          description: the age in years of the pet
          example: 17
        eyeColor:
          type: string
          description: the eye color of the pet
          example: green
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
x-kusk:
  disabled: false
  upstream:
    service:
      name: petstore
      namespace: default
      port: 8081
    rewrite:
      pattern: "^/petstore"
      substitution: ""
  path:
    prefix: /petstore/api/v3
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/frank-kilcommins/Kusk-Pets-API/0.0.1